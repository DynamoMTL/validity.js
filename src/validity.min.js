/*! validity.js (version 0.0.3) 2015-05-26 */
(function(){var a,b;b={required:"can't be blank",greaterThan:"must be greater than %arg",greaterThanOrEqual:"must be greater than or equal to %arg",lessThan:"must be less than %arg",lessThanOrEqual:"must be less than or equal to %arg",regex:"is invalid",length:"length must be %length",lengthGreaterThan:"length must be greater than %length",lengthLessThan:"length must be less than %length",number:"must be a number"},a=function(a,c){var d,e,f,g;e=b[a];for(d in c)g=c[d],f=RegExp("%"+d,"g"),e=e.replace(f,g);return e},window.Validity={MESSAGES:b,RULES:{required:function(b,c){return b[c]?void 0:a("required",{field:c})},greaterThan:function(b,c,d){return Number(b[c])>d?void 0:a("greaterThan",{field:c,arg:d})},greaterThanOrEqual:function(b,c,d){return Number(b[c])>=d?void 0:a("greaterThanOrEqual",{field:c,arg:d})},lessThan:function(b,c,d){return Number(b[c])<d?void 0:a("lessThan",{field:c,arg:d})},lessThanOrEqual:function(b,c,d){return Number(b[c])<=d?void 0:a("lessThanOrEqual",{field:c,arg:d})},regex:function(b,c,d){return String(b[c]).match(d)?void 0:a("regex",{field:c})},length:function(b,c,d){var e,f;if(f=b[c]||"","number"==typeof d){if(f.length!==d)return a("length",{field:c,length:d})}else if("object"==typeof d){if((e=d.greaterThan)&&f.length<e)return a("lengthGreaterThan",{field:c,length:e});if((e=d.lessThan)&&f.length>e)return a("lengthLessThan",{field:c,length:e})}},number:function(b,c){return"number"!=typeof b[c]?a("number",{field:c}):void 0}},_normalizeRules:function(a){var b,c,d,e;e=this,d={};for(b in a)c=a[b],e._normalizeRule(b,c,d);return d},_normalizeRule:function(a,b,c){var d,e,f,g,h,i;switch(c[a]||(c[a]={}),typeof b){case"string":c[a][b]=null;break;case"object":if(f=this,Array.isArray(b))for(h=0,i=b.length;i>h;h++)e=b[h],f._normalizeRule(a,e,c);else for(d in b)g=b[d],c[a][d]=g}return c},define:function(a,b){return null==b&&(b={}),a.validations=this._normalizeRules(b),a.prototype.validate=function(){var b,c,d,e,f,g,h,i,j,k;g=this,this.errors={},k=a.validations;for(c in k){h=k[c],i=g[c];for(f in h){if(b=h[f],d=null,e=Validity.RULES[f])d=e(g,c,b);else{if(e=g[f],!e||"function"!=typeof e)throw"Validator "+f+" is not defined";d=e.apply(g,[c,b])}d&&((j=g.errors)[c]||(j[c]=[]),g.errors[c].push(d))}}return this.errors},a.prototype.isValid=function(){var a,b,c;this.validate(),c=this.errors;for(a in c)return b=c[a],!1;return!0},a.prototype.isInvalid=function(){return!this.isValid()}}}}).call(this);